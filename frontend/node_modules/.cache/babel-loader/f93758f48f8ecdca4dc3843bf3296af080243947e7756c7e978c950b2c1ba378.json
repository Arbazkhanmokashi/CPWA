{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nil\\\\June\\\\03.06.2024\\\\Car-pooling-Ride-Sharing\\\\frontend\\\\src\\\\components\\\\ShareMarketChart.js\";\n// ShareMarketChart.js\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartContainer = styled.div`\n  background-color: black; /* Black background */\n  padding: 20px;\n`;\n_c = ChartContainer;\nconst ChartHeading = styled.h2`\n  color: yellow; /* Bright yellow color */\n`;\n_c2 = ChartHeading;\nconst StyledSVG = styled.svg`\n  width: 100%;\n  height: auto;\n\n  path {\n    fill: none;\n    stroke: red; /* Bright red color for graph */\n    stroke-width: 2;\n  }\n\n  text {\n    fill: yellow; /* Bright yellow color for axis labels */\n    font-size: 12px; /* Adjust font size */\n  }\n`;\n_c3 = StyledSVG;\nfunction ShareMarketChart({\n  data,\n  width,\n  height\n}) {\n  // Assume data is an array of { x, y } points\n  const minX = Math.min(...data.map(point => point.x));\n  const maxX = Math.max(...data.map(point => point.x));\n  const minY = Math.min(...data.map(point => point.y));\n  const maxY = Math.max(...data.map(point => point.y));\n\n  // Calculate scaling factors for x and y axes\n  const scaleX = width / (maxX - minX);\n  const scaleY = height / (maxY - minY);\n\n  // Generate path data for the line chart\n  const pathData = data.map(({\n    x,\n    y\n  }) => `${(x - minX) * scaleX},${height - (y - minY) * scaleY}`).join(' ');\n  return /*#__PURE__*/_jsxDEV(ChartContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ChartHeading, {\n      children: \"Share Market Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledSVG, {\n      viewBox: `0 0 ${width} ${height}`,\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        d: `M ${pathData}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_c4 = ShareMarketChart;\nexport default ShareMarketChart;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ChartContainer\");\n$RefreshReg$(_c2, \"ChartHeading\");\n$RefreshReg$(_c3, \"StyledSVG\");\n$RefreshReg$(_c4, \"ShareMarketChart\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","ChartContainer","div","_c","ChartHeading","h2","_c2","StyledSVG","svg","_c3","ShareMarketChart","data","width","height","minX","Math","min","map","point","x","maxX","max","minY","y","maxY","scaleX","scaleY","pathData","join","children","fileName","_jsxFileName","lineNumber","columnNumber","viewBox","d","_c4","$RefreshReg$"],"sources":["D:/Nil/June/03.06.2024/Car-pooling-Ride-Sharing/frontend/src/components/ShareMarketChart.js"],"sourcesContent":["// ShareMarketChart.js\r\n\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ChartContainer = styled.div`\r\n  background-color: black; /* Black background */\r\n  padding: 20px;\r\n`;\r\n\r\nconst ChartHeading = styled.h2`\r\n  color: yellow; /* Bright yellow color */\r\n`;\r\n\r\nconst StyledSVG = styled.svg`\r\n  width: 100%;\r\n  height: auto;\r\n\r\n  path {\r\n    fill: none;\r\n    stroke: red; /* Bright red color for graph */\r\n    stroke-width: 2;\r\n  }\r\n\r\n  text {\r\n    fill: yellow; /* Bright yellow color for axis labels */\r\n    font-size: 12px; /* Adjust font size */\r\n  }\r\n`;\r\n\r\nfunction ShareMarketChart({ data, width, height }) {\r\n  // Assume data is an array of { x, y } points\r\n  const minX = Math.min(...data.map((point) => point.x));\r\n  const maxX = Math.max(...data.map((point) => point.x));\r\n  const minY = Math.min(...data.map((point) => point.y));\r\n  const maxY = Math.max(...data.map((point) => point.y));\r\n\r\n  // Calculate scaling factors for x and y axes\r\n  const scaleX = width / (maxX - minX);\r\n  const scaleY = height / (maxY - minY);\r\n\r\n  // Generate path data for the line chart\r\n  const pathData = data\r\n    .map(({ x, y }) => `${(x - minX) * scaleX},${height - (y - minY) * scaleY}`)\r\n    .join(' ');\r\n\r\n  return (\r\n    <ChartContainer>\r\n      <ChartHeading>Share Market Chart</ChartHeading>\r\n      <StyledSVG viewBox={`0 0 ${width} ${height}`}>\r\n        <path d={`M ${pathData}`} />\r\n        {/* Add axis labels and ticks */}\r\n        {/* For example: */}\r\n        {/* <text x=\"10\" y={height - 10}>0</text> */}\r\n        {/* <text x={width - 20} y={height - 10}>{maxX}</text> */}\r\n      </StyledSVG>\r\n    </ChartContainer>\r\n  );\r\n}\r\n\r\nexport default ShareMarketChart;\r\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGH,MAAM,CAACI,GAAG;AACjC;AACA;AACA,CAAC;AAACC,EAAA,GAHIF,cAAc;AAKpB,MAAMG,YAAY,GAAGN,MAAM,CAACO,EAAE;AAC9B;AACA,CAAC;AAACC,GAAA,GAFIF,YAAY;AAIlB,MAAMG,SAAS,GAAGT,MAAM,CAACU,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAdIF,SAAS;AAgBf,SAASG,gBAAgBA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAO,CAAC,EAAE;EACjD;EACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGL,IAAI,CAACM,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACC,CAAC,CAAC,CAAC;EACtD,MAAMC,IAAI,GAAGL,IAAI,CAACM,GAAG,CAAC,GAAGV,IAAI,CAACM,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACC,CAAC,CAAC,CAAC;EACtD,MAAMG,IAAI,GAAGP,IAAI,CAACC,GAAG,CAAC,GAAGL,IAAI,CAACM,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACK,CAAC,CAAC,CAAC;EACtD,MAAMC,IAAI,GAAGT,IAAI,CAACM,GAAG,CAAC,GAAGV,IAAI,CAACM,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACK,CAAC,CAAC,CAAC;;EAEtD;EACA,MAAME,MAAM,GAAGb,KAAK,IAAIQ,IAAI,GAAGN,IAAI,CAAC;EACpC,MAAMY,MAAM,GAAGb,MAAM,IAAIW,IAAI,GAAGF,IAAI,CAAC;;EAErC;EACA,MAAMK,QAAQ,GAAGhB,IAAI,CAClBM,GAAG,CAAC,CAAC;IAAEE,CAAC;IAAEI;EAAE,CAAC,KAAK,GAAG,CAACJ,CAAC,GAAGL,IAAI,IAAIW,MAAM,IAAIZ,MAAM,GAAG,CAACU,CAAC,GAAGD,IAAI,IAAII,MAAM,EAAE,CAAC,CAC3EE,IAAI,CAAC,GAAG,CAAC;EAEZ,oBACE5B,OAAA,CAACC,cAAc;IAAA4B,QAAA,gBACb7B,OAAA,CAACI,YAAY;MAAAyB,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eAC/CjC,OAAA,CAACO,SAAS;MAAC2B,OAAO,EAAE,OAAOtB,KAAK,IAAIC,MAAM,EAAG;MAAAgB,QAAA,eAC3C7B,OAAA;QAAMmC,CAAC,EAAE,KAAKR,QAAQ;MAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAErB;AAACG,GAAA,GA5BQ1B,gBAAgB;AA8BzB,eAAeA,gBAAgB;AAAC,IAAAP,EAAA,EAAAG,GAAA,EAAAG,GAAA,EAAA2B,GAAA;AAAAC,YAAA,CAAAlC,EAAA;AAAAkC,YAAA,CAAA/B,GAAA;AAAA+B,YAAA,CAAA5B,GAAA;AAAA4B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}